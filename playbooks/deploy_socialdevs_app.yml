---
- name: ‚®úÔ∏è  Aplicar manifiesto de la app {{ app_name }} en Argo CD
  hosts: localhost
  connection: local          # ‚Üê evita SSH
  gather_facts: false
  become: false

  # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  # Carga de variables globales
  # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  vars_files:
    - ../vars/main.yml       # (contiene kubectl_path, kubeconfig_path, etc.)

  # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  # Variables internas
  # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  vars:
    manifest_tmp: "/tmp/{{ app_name }}-bootstrap.yaml"

  tasks:
    # 1Ô∏è‚É£  Verificar que kubectl se conecta al cl√∫ster
    - name: üß™ Verificar conexi√≥n a cl√∫ster Kubernetes
      command: >
        {{ kubectl_path }}
        --kubeconfig {{ kubeconfig_path }}
        version --short
      register: k8s_check
      changed_when: false
      # Falla si el comando no devuelve versi√≥n de servidor
      failed_when: k8s_check.rc != 0 or
                   "'Server Version'" not in k8s_check.stdout

    # 2Ô∏è‚É£  Renderizar la plantilla Jinja2 ‚Üí YAML temporal
    - name: üìù Renderizar manifest de la aplicaci√≥n
      template:
        src: ../templates/bootstrap-application.yaml.j2
        dest: "{{ manifest_tmp }}"

    # 3Ô∏è‚É£  kubectl apply
    - name: üöÄ Aplicar manifiesto (kubectl apply)
      command: >
        {{ kubectl_path }}
        --kubeconfig {{ kubeconfig_path }}
        apply -f {{ manifest_tmp }}
      register: apply_out
      changed_when: "'created' in apply_out.stdout or
                     'configured' in apply_out.stdout"

    # 4Ô∏è‚É£  Comprobar que la Application qued√≥ creada
    - name: ‚úÖ Verificar Application en Argo CD
      command: >
        {{ kubectl_path }}
        --kubeconfig {{ kubeconfig_path }}
        -n {{ argo_namespace }}
        get application {{ app_name }} -o wide
      register: verify_out
      changed_when: false

    # 5Ô∏è‚É£  Mostrar estado final ‚Äì √∫til para validar desde CI
    - name: ‚ÑπÔ∏è Mostrar estado
      debug:
        msg: "{{ verify_out.stdout }}"